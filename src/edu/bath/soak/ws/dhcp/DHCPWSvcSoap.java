
package edu.bath.soak.ws.dhcp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DHCPWSvcSoap", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DHCPWSvcSoap {


    /**
     * Gets SubnetInfo for a specific server 
     * 
     * @param baseIpAddress
     * @param server
     * @return
     *     returns edu.bath.soak.ws.dhcp.DHCPWSSubnetInfo
     */
    @WebMethod(operationName = "GetSubnetInfo", action = "http://www.bath.edu/soak/ws/dhcp/0.3/GetSubnetInfo")
    @WebResult(name = "GetSubnetInfoResult", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
    @RequestWrapper(localName = "GetSubnetInfo", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnetInfo")
    @ResponseWrapper(localName = "GetSubnetInfoResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnetInfoResponse")
    public DHCPWSSubnetInfo getSubnetInfo(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server,
        @WebParam(name = "baseIpAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String baseIpAddress);

    /**
     * Retrieves information for all clients on a given scope
     * 
     * @param server
     * @param subnetAddressTxt
     * @return
     *     returns edu.bath.soak.ws.dhcp.ArrayOfDHCPWSClientInfo
     */
    @WebMethod(operationName = "GetSubnetClients", action = "http://www.bath.edu/soak/ws/dhcp/0.3/GetSubnetClients")
    @WebResult(name = "GetSubnetClientsResult", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
    @RequestWrapper(localName = "GetSubnetClients", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnetClients")
    @ResponseWrapper(localName = "GetSubnetClientsResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnetClientsResponse")
    public ArrayOfDHCPWSClientInfo getSubnetClients(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server,
        @WebParam(name = "subnetAddressTxt", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String subnetAddressTxt);

    /**
     * Gets all DHCP SubnetInfo 
     * 
     * @param server
     * @return
     *     returns edu.bath.soak.ws.dhcp.ArrayOfDHCPWSSubnetInfo
     */
    @WebMethod(operationName = "GetSubnets", action = "http://www.bath.edu/soak/ws/dhcp/0.3/GetSubnets")
    @WebResult(name = "GetSubnetsResult", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
    @RequestWrapper(localName = "GetSubnets", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnets")
    @ResponseWrapper(localName = "GetSubnetsResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetSubnetsResponse")
    public ArrayOfDHCPWSSubnetInfo getSubnets(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server);

    /**
     * Retrieves information for a particular client
     * 
     * @param iPAddressTxt
     * @param server
     * @return
     *     returns edu.bath.soak.ws.dhcp.DHCPWSClientInfo
     */
    @WebMethod(operationName = "GetClientInfo", action = "http://www.bath.edu/soak/ws/dhcp/0.3/GetClientInfo")
    @WebResult(name = "GetClientInfoResult", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
    @RequestWrapper(localName = "GetClientInfo", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetClientInfo")
    @ResponseWrapper(localName = "GetClientInfoResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.GetClientInfoResponse")
    public DHCPWSClientInfo getClientInfo(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server,
        @WebParam(name = "iPAddressTxt", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String iPAddressTxt);

    /**
     * Creates a DHCP Reservation
     * 
     * @param scopeAddress
     * @param hostName
     * @param server
     * @param macAddress
     * @param comment
     * @param ipAddress
     */
    @WebMethod(operationName = "CreateReservation", action = "http://www.bath.edu/soak/ws/dhcp/0.3/CreateReservation")
    @RequestWrapper(localName = "CreateReservation", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.CreateReservation")
    @ResponseWrapper(localName = "CreateReservationResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.CreateReservationResponse")
    public void createReservation(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server,
        @WebParam(name = "scopeAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String scopeAddress,
        @WebParam(name = "ipAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String ipAddress,
        @WebParam(name = "macAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String macAddress,
        @WebParam(name = "hostName", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String hostName,
        @WebParam(name = "comment", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String comment);

    /**
     * Deletes a DHCP Reservation
     * 
     * @param scopeAddress
     * @param server
     * @param macAddress
     * @param ipAddress
     */
    @WebMethod(operationName = "DeleteReservation", action = "http://www.bath.edu/soak/ws/dhcp/0.3/DeleteReservation")
    @RequestWrapper(localName = "DeleteReservation", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.DeleteReservation")
    @ResponseWrapper(localName = "DeleteReservationResponse", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3", className = "edu.bath.soak.ws.dhcp.DeleteReservationResponse")
    public void deleteReservation(
        @WebParam(name = "server", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String server,
        @WebParam(name = "scopeAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String scopeAddress,
        @WebParam(name = "ipAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String ipAddress,
        @WebParam(name = "macAddress", targetNamespace = "http://www.bath.edu/soak/ws/dhcp/0.3")
        String macAddress);

}
